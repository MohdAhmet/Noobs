#include <ArduinoIoTCloud.h>
#include <Arduino_ConnectionHandler.h>
#include "arduino_secrets.h"

const char DEVICE_LOGIN_NAME[] = "ef12be50-7048-4081-bca4-1b52fa5b5b19";

const char SSID[] = "BOEING 787"; // Replace SECRET_SSID with your WiFi network SSID
const char PASS[] = "universalmun1"; // Replace SECRET_PASS with your WiFi network password
const char DEVICE_KEY[] = "cyDIp?Aqw6bjtYxbbkr!lhErn"; // Replace SECRET_DEVICE_KEY with your IoT Cloud device key

void onTemperatureChange();
void sendMessage(const char* message);

CloudTemperature temperature;

void initProperties() {
  ArduinoCloud.setBoardId(DEVICE_LOGIN_NAME);
  ArduinoCloud.setSecretDeviceKey(DEVICE_KEY);
  ArduinoCloud.addProperty(temperature, READWRITE, ON_CHANGE, onTemperatureChange);
}

WiFiConnectionHandler ArduinoIoTPreferredConnection(SSID, PASS);

void setup() {
  Serial.begin(9600);
  delay(1500);
  initProperties();
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  // Your code here
}

void onTemperatureChange() {
  // Add your code here to handle changes in the 'temperature' property
  float currentTemperature = temperature;
  String message;

  // No need to update cloud dashboard gauge with current temperature as it is done automatically for properties marked as ON_CHANGE

  // Send a message to the cloud dashboard whenever temperature changes
  message = "Current temperature: " + String(currentTemperature) + " degrees Celsius";

  if (currentTemperature > 17) {
    // If temperature exceeds 17 degrees, trigger an alarm
    message += ". Temperature exceeds threshold! Please check.";
  }

  sendMessage(message.c_str());
}

void sendMessage(const char* message) {
  Serial.println(message);
}
