/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/302b366e-5bc1-47ee-beb2-7e23504ac513 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  String message;
  int temperature;
  bool activeBuzzer;
  bool led;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"

int PIN_LED = LED_BUILTIN; 
#define sensorD0 A0
#define ACTIVE_BUZZER_PIN D2

//transform to kelvin to celsius Function to convert raw sensor reading (0-1023) to estimated temperature in Celsius (assuming linear relationship)
float getTemperatureCelsius(int sensorValue) {
  return (sensorValue * 5.0f) / 1023.0f * 100.0f;
}

void setup() {
 
  Serial.begin(115200);

  initProperties();

  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();

  pinMode(PIN_LED,OUTPUT);
  pinMode(sensorD0, INPUT);
  pinMode(ACTIVE_BUZZER_PIN, OUTPUT);
}

void loop() {
   ArduinoCloud.update();
  // put your main code here, to run repeatedly:
  int sensorValue = analogRead(sensorD0);
  float temperatureCelsius = getTemperatureCelsius(sensorValue);
  temperature = temperatureCelsius - 125;
  Serial.println(temperature);

  if (temperatureCelsius > 20.0f) {
    activeBuzzer = true;
    // Buzz the buzzer indicating high temperature
    tone(ACTIVE_BUZZER_PIN, 1000); // Start buzzing at 1000 Hz
    delay(50); // Buzz for 100 milliseconds
    noTone(ACTIVE_BUZZER_PIN);// Stop buzzing
    digitalWrite(PIN_LED,HIGH);
    message = "HOT"; 
    led = true;
    Serial.println("HOT");
  } 
   else {
    activeBuzzer = false;
    digitalWrite(PIN_LED,LOW);
    message = "COLD";
    led = false;
    Serial.println("COLD");
  }
  delay(1000); // Delay between readings 3 seconds
}

void onTemperatureChange()  {
 
}
