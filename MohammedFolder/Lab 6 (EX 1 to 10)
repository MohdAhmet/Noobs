//SPDX-License-Identifier: GPL-3.0
pragma solidity >=0.5.0 <0.9.0;
//Ex2
contract Factroy {
        uint idDigits = 16;
    //Ex3
        uint idModulus = 10**idDigits;
    //Ex4
        struct Product {
        uint id;
        string name;
        }
    //Ex5
        Product[] products;

    //Ex6 (with modification from EX9)
        function _createProduct (uint _id, string memory _name) private {
            uint productId = products.length;
            products.push(Product(_id, _name));
            emit NewProduct(productId, _name, _id);
        }

    //EX7 and EX8
        function _generateRandomId (string memory _str) public view returns (uint) {
            uint rand = uint(keccak256(abi.encodePacked(_str)));
            return rand % idModulus;
        }

    //Ex8
        function createRandomProduct(string memory _name) public {
            uint randId = _generateRandomId(_name);
            _createProduct(randId, _name);
            }

    //Ex9
        event NewProduct(uint indexed productId, string name, uint id);
        //the "_createProduct" funciton has been modified to emit the emit the NewProduct event 

    //Ex10
        mapping(uint => address) public productToOwner;
        mapping(address => uint) public ownerProductCount;
}
